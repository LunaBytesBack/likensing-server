AddressData.badZip = Error in '${name}': The zip '${zip}' is invalid for the selected county.
AddressData.city = City
AddressData.fullAddressRequired = Error in '${name}': Please fill in all fields.
AddressData.partialAddressRejected = Error in '${name}': Please provide a full address.
AddressData.street = Street
AddressData.zip = Zip
AuditLogEntry.user = User
AuditLogEntry.tenant = Company
AuditLogEntry.ip = IP
AuditLogEntry.plural = Audit log
AuditLogEntry.timestamp = Timestamp
AuditLogEntry.causedBy = Caused by
BizController.changesSaved = The changes have been saved.
BizController.illegalArgument = Illegal Argument. Please fix all marked fields
BizController.invalidReference = A reference between the given entities are inconsistent.
BizController.invalidTenant = This entity does belong to a different tenant and cannot be edited.
BizController.mustNotBeNew = An existing entity is needed.
BizController.objectDeleted = The entity was deleted.
BizController.unknownObject = Unknown entity: '${id}'
BizInterceptor.missingPermission = The permission '${permission}' is needed to proceed.
BizInterceptor.missionPermission = The permission '${permission}' is needed to proceed.
BucketInfo.numberOfObjects = Number of objects
CodeList.plural = Code lists
CodeListController.codeMustBeFilled = The field "Code" must be filled.
CodeListEntry.additionalValue = Additional value
CodeListEntry.plural = Entries
CodeListEntry.value = Value
ContactData.email = E-mail
ContactData.fax = Fax
ContactData.invalidPhone = Error in field '${field}': '${value}' is not a valid phone number.
ContactData.mobile = Mobile phone number
ContactData.phone = Phone number
DatabaseController.execute = Execute
DatabaseController.help = <p>The following changes to the database schema are recommended to run the application.</p><p>Please keep in mind that manually created tables might be shown to delete. In this chase check if the table should be deleted.</p><p>It is recommanded to backup the database before applying changes.</p><p>Some changes can might only be applied after some preconditions are met (e.g. deleting a column after deleting a FOREIGN KEY)</p>
DatabaseController.reason = Reason
DatabaseController.schema = Database schema
DatabaseController.sql = SQL
DatabaseController.unknownChange = Unknown change
IncidentController.totalIncidents = Number of entries
InternationalAddressData.country = Country
JournalEntry.plural = Journal
JournalEntry.subsystem = Subsystem
JournalEntry.targetId = Id
JournalEntry.targetName = Object
JournalEntry.targetType = Type
JournalEntry.tod = Time
JournalEntry.userId = User id
JournalEntry.username = Username
LoggedMessage.category = Category
LoggedMessage.level = Level
LoggedMessage.message = Message
LoggedMessage.node = Node
LoggedMessage.plural = System log
LoggedMessage.tod = Time
LoggedMessage.user = User
LoginData.accountIsLocked = The user is logged.
LoginData.accountLocked = Locked
LoginData.apiToken = API token
LoginData.generatedPassword = Generated password
LoginData.lastLogin = Last login
LoginData.numberOfLogins = Number of logins
LoginData.password = Password
LoginData.password.generate = Generate password
LoginData.password.generateAndSend = Generate and send password
LoginData.password.hiddenGenerated = Hidden generated password
LoginData.password.hiddenGeneratedShort = Hidden
LoginData.password.set = Set password
LoginData.passwordHash = Password hash
LoginData.salt = Salt
LoginData.username = Username
mail-password.loginHere = Login here
mail-password.password = Password
mail-password.subject = Your new password
mail-password.username = Username or password
mail-password.yourCredentails = Your credentials
mail.hello = Hello
MailLoggedMessage.html = HTML
MailLoggedMessage.mailExtension = Template
MailLoggedMessage.messageId = Message id
MailLoggedMessage.node = Node
MailLoggedMessage.plural = Mails
MailLoggedMessage.receiver = Receiver
MailLoggedMessage.receiverName = Receiver name
MailLoggedMessage.sender = Sender
MailLoggedMessage.senderName = Sender name
MailLoggedMessage.success = Successful
MailLoggedMessage.text = Text
MailLoggedMessage.tod = Time
MailProtocol.html = HTML
MailProtocol.messageId = Message id
MailProtocol.node = Node
MailProtocol.plural = Mails
MailProtocol.receiver = Receiver
MailProtocol.receiverName = Receiver name
MailProtocol.sender = Sender
MailProtocol.senderName = Sender name
MailProtocol.success = Successful
MailProtocol.text = Text
MailProtocol.tod = Time
MailProtocol.type = Type
Menu.settings = Manage
Model.address = Address
Model.code = Code
Model.codeList = Code list
Model.codeListEntry = Entry
Model.config = Configuration
Model.confirmation = Confirmation
Model.create = Create
Model.description = Descriptions
Model.details = Details
Model.email = E-mail
Model.id = ID
Model.incident = Error
Model.links = Link
Model.login = Login
Model.login.emailRequired = Please supply a e-mail address
Model.login.forgotPassword = Forgot password
Model.login.forgotPassword.help = Please enter your e-mail to reset your password and receive a new one.
Model.login.keepLogin = Keep logged in
Model.login.login = Login
Model.login.password = Password
Model.login.passwordResetted = Your password has been resetted. Please check your inbox.
Model.login.passwortReset = Reset password
Model.login.resetPassword = Reset password
Model.login.user = Username
Model.name = Name
Model.newPassword = New password
Model.oldPassword = Old password
Model.overview = Overview
Model.password = Password
Model.password.confirmationMismatch = The supplied password and its confirmation do not match.
Model.password.hilarious = Insufficient
Model.password.hilarious.description = Passwords shorter than ${minLength} characters
Model.password.minLengthError = The supplied password is too short.
Model.password.moderate = Moderate
Model.password.moderate.description = Passwords containing upper and lower case characters or numbers
Model.password.recommended = Recommended
Model.password.set = Change password
Model.password.stateOfTheArt = Secure
Model.password.stateOfTheArt.description = Passwords containing characters and special characters
Model.password.unsafe = Unsafe
Model.password.unsafe.description = Passwords containing less than ${saneLength} characters consisting only of lower case characters, upper case characters or numbers.
Model.priority = Priority
Model.security = Security
Model.tenant = Tenant
Model.userAccount = User account
PersonData.birthday = Birthday
PersonData.firstname = Firstname
PersonData.lastname = Lastname
PersonData.offline = offline
PersonData.salutation = Salutation
PersonData.title = Title
ProfileController.invalidOldPassword = The old password is incorrect.
ProfileController.myProfile = My profile
ProfileController.userProfile = User profile
Role.administrator = Administrator
Role.administrator.description = Allows the user to alter system settings.
Role.file-manager = Manage files
Role.file-manager.description = Allows the user to manage files.
Role.jobs-execution = Execute jobs
Role.jobs-execution.description = Allows the user to execute jobs.
Role.jobs-manager = Manage jobs
Role.jobs-manager.description = Allows the user to create and edit jobs.
Role.user-administrator = User administrator
Role.user-administrator.description = Allows the user to manage the users.
SAMLController.customSaml = Own SAML provider
SAMLController.loginViaSAML = Login via SAML
SAMLController.saml = SAML
ScopeDefaultConfigController.showDefaultConfig = Default configuration
Storage.uploadFailed = Failed to upload file: ${errorMessage} (${errorClass})
StorageController.buckets = File management
StorageController.cannotAccessBucket = Permission denied to access '${bucket}' due to lack of permission or the bucket does not exist.
StorageController.objects = Files
StorageController.uploadFile = Upload file
StoredIncident = Error
StoredIncident.category = Category
StoredIncident.firstOccurrence = First occurrence
StoredIncident.lastOccurrence = Last occuerence
StoredIncident.location = Location
StoredIncident.mdc = Details
StoredIncident.mdc.name = Name
StoredIncident.mdc.value = Value
StoredIncident.node = Node
StoredIncident.numberOfOccurrences = Number of Occurrences
StoredIncident.plural = Incident protocol
StoredIncident.stack = Stacktrace
StoredIncident.user = User
StoredObject.cancelUpload = Cancel
StoredObject.errEmpty = File is empty
StoredObject.errInvalidExtension = Invalid file type
StoredObject.errTooLarge = File is too big
StoredObject.errTooSmall = File is too small
StoredObject.resetBtn = Reset
StoredObject.specifyURL = Supply url
StoredObject.uploadArea = Drop a file here to upload...
StoredObject.uploadBtn = Select file...
StoredObject.uploadFailed = Upload failed
StoredObject.URL = URL
Tenant.accountNumber = Account number
Tenant.administration = Administration
Tenant.canAccessParent = Administration of parent tenant
Tenant.canAccessParent.help = Allows users of this tenant to administrate the parent tenant.
Tenant.externalLoginIntervalDays = Interval for external logins
Tenant.externalLoginIntervalDays.help = Determines the days to elapsed until a user with the setting "External login required" needs to reauthenticate via an external system.
Tenant.loginIntervalDays = Login intervals
Tenant.loginIntervalDays.help = Determines how many days a user stays logged in before he or she needs to login again.
Tenant.parent = Parent tenant
Tenant.parent.help = If a parent tenant is set some entities are supplied by its parent and management is also possible.
Tenant.parentCanAccess = Administration from parent tenant
Tenant.parentCanAccess.help = Allows users of the parent tenant to administrate this tenant.
Tenant.permissions = Permissions
Tenant.plural = Tenants
Tenant.saml = Authentication via SAML 2.0
Tenant.samlFingerprint = SAML fingerprint
Tenant.samlFingerprint.help = Contains the SHA1 fingerprint of the X509 certificate the SAML provider uses to sign logins. To use multiple SAML providers, separate the values with a comma.
Tenant.samlIssuerIndex = SAML issuer index
Tenant.samlIssuerIndex.help = Contains the index this system is managed in the supplied SAML provider. Default value is <b>0</b>.
Tenant.samlIssuerName = SAML provider name
Tenant.samlIssuerName.help = Contains the name of the SAML provider. <i>Example: https://my-domain.local/adfs/services/trust</i> - To use multiple SAML providers, separate them with a comma.
Tenant.samlIssuerUrl = SAML url
Tenant.samlIssuerUrl.help = Contains the SAML url which is called for login. <i>Example: https://my-domain.local/adfs/ls</i>
Tenant.samlRequestIssuerName = SAML issuer name
Tenant.samlRequestIssuerName.help = Contains the name this system is managed in the supplied SAML provider.
Tenant.select = Select tenant
Tenant.selectMain = To main tenant
Tenant.suffixDays = Days
TenantAware.invalidTenant = Error in field '${field}': The object has to belong to the same tenant.
TenantController.cannotBecomeTenant = The senected tenant cannot be managed.
TenantController.cannotDeleteSelf = Your own tenant cannot be deleted.
TenantPermission.feature-provide-jobs = Provides jobs
TraceData.changed = Last changed
TraceData.created = Created
TraceData.infos = Information
UserAccount.changePassword = Change password
UserAccount.email.help = To inform the user of important events, a mail address is needed.
UserAccount.externalLoginMustBePerformed = Please authenticate via an external system.
UserAccount.externalLoginRequired = Login via external system is required
UserAccount.externalLoginRequired.help = Determines if users need to reauthenticate via an external system after a given interval supplied by the tenant.
UserAccount.forcedExternalLoginNear = Due to security reasons you soon need to reauthenticate via your external system. You may want to re-login by yourself to reauthenticate at your own schedule.
UserAccount.forcedLogoutNear = Due to security reasons you soon need to login again. You may want to re-login by yourself to reauthenticate at your own schedule.
UserAccount.invalidOldPassword = The old password is invalid.
UserAccount.plural = User
UserAccount.roles = Permissions
UserAccount.security = Security
UserAccount.select = Select user
UserAccount.selectMain = Back to own user
UserAccount.username.help = Used to log in. If the field is empty the e-mail address is used (recommended).
UserAccount.warnAboutGeneratedPassword = A generated password is used. Please change to an own password.
UserAccountConroller.cannotGeneratePasswordForOwnUser = A password cannot be generated for your own user. Please use the function 'Change password' instead.
UserAccountConroller.passwordGenerated = A password was generated.
UserAccountConroller.passwordGeneratedAndSent = A password was generated and sent to '${email}'.
UserAccountController.cannotBecomeUser = The own user cannot be selected.
UserAccountController.forgotPassword.reason = The 'Forgot password' function was used from ip ${ip}.
UserAccountController.logout = Logout
UserAccountController.noUserFoundForEmail = No user was found for the given e-mail address.
UserAccountController.tooManyUsersFoundForEmail = The given e-mail address is not unique.
VirtualObject.download = Download
VirtualObject.fileSize = Size
VirtualObject.physicalKey = Physical key
VirtualObject.publicUrl = Public url
VirtualObject.rename = Rename
VirtualObject.replaceContents = Replace content
VirtualObject.unreference = Delete reference
VirtualObject.versions = Versions

AuditLog.switchedToMainTenant=User changed to main tenant.
AuditLog.selectedTenant=User selected tenant.
AuditLog.passwordChange=User changed password.
AuditLog.passwordChangeFailed=Failed to change password.
AuditLog.lockedOrNonexitentUserTriedLogin=A locked or unknown user tried to log in.
AuditLog.externalLoginRequired=The login of the user was interrupted due to an external authentication is needed.
AuditLog.apiTokenLogin=Login via API token.
AuditLog.passwordLogin=Login via password.
AuditLog.loginRejected=Login rejected: Invalid password or API token.
AuditLog.passwordGenerated=A new password was generated.
AuditLog.resetPasswordRejected=Password reset was rejected for locked user.
AuditLog.resetPassword=Password was reset by user.
AuditLog.switchedToMainUser=User switches back to main account.
AuditLog.selectedUser=User selected another user.
